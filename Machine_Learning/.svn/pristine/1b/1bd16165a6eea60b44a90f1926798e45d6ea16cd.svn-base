
var app = angular.module('MachineLearning');

app.controller('FileUploadCtrl', ['$scope', '$http', '$state', '$rootScope', '$localStorage', function ($scope, $http, $state, $rootScope, $localStorage) {

    var file = "";

    $scope.showSlider = false;

    $scope.blurId = false;
    $rootScope.tabColor.uploadData = "uploadDataSetU";

    $scope.sliderFilterData = { "training": "", "testing": "", "hold": "" };

    $scope.slider = {
        minValue: 80,
        maxValue: 100,
        options: {
            floor: 0,
            ceil: 100,
            step: 1
        }
    };

    function onload() {
        $scope.sliderFilterData.training = $scope.slider.minValue;
        $scope.sliderFilterData.testing = $scope.slider.maxValue - $scope.slider.minValue;
        $scope.sliderFilterData.hold = 100 - $scope.slider.maxValue;
    } onload();

    $scope.$watch('slider.minValue', function (newValue, oldValue) {
        $scope.sliderFilterData.training = newValue;
        $scope.sliderFilterData.testing = $scope.slider.maxValue - newValue;
        $scope.sliderFilterData.hold = 100 - $scope.slider.maxValue;
    });

    $scope.$watch('slider.maxValue', function (newValue, oldValue) {

        $scope.sliderFilterData.testing = newValue - $scope.sliderFilterData.training;
        $scope.sliderFilterData.hold = 100 - newValue;
    });


    $scope.changeTraining = function (minValue) {

        if (minValue <= ($scope.slider.maxValue * 1)) {
            $scope.slider.minValue = minValue;
        }


    };

    $scope.changeTesting = function (maxValue) {

        var testingReange = (maxValue * 1) + ($scope.sliderFilterData.training * 1);

        if ((testingReange * 1) >= ($scope.slider.minValue * 1)) {
            $scope.slider.maxValue = testingReange;
        }

    };

    $scope.blurDiv = function () {

        $scope.blurId = true;
    }


    $scope.unblurDiv = function () {

        $scope.blurId = false;
    }

    $scope.changeHold = function (holdValue) {

        var holdSliderValue = 100 - (holdValue * 1);

        if ((holdSliderValue * 1) >= ($scope.slider.minValue * 1)) {
            $scope.slider.maxValue = (holdSliderValue * 1);
        }

    }


    $scope.files = [];


    $scope.removeFile = function () {

        $scope.files.splice(0, 1);


    }




    //============== DRAG & DROP =============
    // source for drag&drop: http://www.webappers.com/2011/09/28/drag-drop-file-upload-with-html5-javascript/

    $scope.flag = false;
    var dropbox = document.getElementById("dropbox")
    $scope.dropText = '(Upload Maximum 1 document at a time with less than 12 MB)'

    // init event handlers
    function dragEnterLeave(evt) {
        evt.stopPropagation()
        evt.preventDefault()
        $scope.$apply(function () {
            $scope.dropText = "(Upload Maximum 1 document at a time with less than 12 MB)"
            $scope.dropClass = ''
        })
    }
    dropbox.addEventListener("dragenter", dragEnterLeave, false)
    dropbox.addEventListener("dragleave", dragEnterLeave, false)
    dropbox.addEventListener("dragover", function (evt) {
        evt.stopPropagation()
        evt.preventDefault()
        var clazz = 'not-available'
        var ok = evt.dataTransfer && evt.dataTransfer.types && evt.dataTransfer.types.indexOf('Files') >= 0 && evt.dataTransfer.types.indexOf('Files') <= 1
        $scope.$apply(function () {
            $scope.dropText = ok ? '(Upload Maximum 1 document at a time with less than 12 MB)' : 'Only files are allowed!'
            $scope.dropClass = ok ? 'over' : 'not-available'
        })
    }, false)
    dropbox.addEventListener("drop", function (evt) {
        $scope.showSlider = true;
        console.log('drop evt:', JSON.parse(JSON.stringify(evt.dataTransfer)))
        evt.stopPropagation()
        evt.preventDefault()
        $scope.$apply(function () {
            $scope.dropText = '(Upload Maximum 1 document at a time with less than 12 MB)'
            $scope.dropClass = ''
        })
        var files = evt.dataTransfer.files
        if (files.length == 1 && $scope.files.length<1) {
            $scope.$apply(function () {

            //     if(element.files.length>1){
            //     $scope.files.push(element.files[0]);
            // }
                for (var i = 0; i < files.length; i++) {
                    $scope.files.push(files[i])
                }
            })
        }else{
            
        }
    }, false)
    //============== DRAG & DROP =============

    $scope.setFiles = function (element) {
        $scope.$apply(function ($scope) {
            console.log('files:', element.files);
            // Turn the FileList object into an Array
            // if(element.files.length>1){
            //     $scope.files.push(element.files[0]);
            // }
            
            for (var i = 0; i < element.files.length; i++) {
                $scope.files.push(element.files[i])
            }
            $scope.progressVisible = false
        });
    };


    $scope.uploadFile = function () {

        if ($scope.sliderFilterData.hold < 0) {
            $scope.sliderFilterData.testing = $scope.sliderFilterData.testing + $scope.sliderFilterData.hold;
            $scope.sliderFilterData.hold = 0;
        }
        //flag = true;
        $scope.loader = true;
        $scope.showSlider = true;
        var fd = new FormData()
        console.log("%%%%%%%%");
        console.log($scope.files[0]);
        fd.append("uploadedFile", $scope.files[0])



        console.log("Inside Controller")
        $http.post("/dataset/upload", fd, {
            withCredentials: true,
            headers: { 'Content-Type': undefined },
            transformRequest: angular.identity
        }).then(function (response) {
            $scope.loader = false;
            if (response.data.status == true) {
                
                file = response.data.filename;
                $localStorage.file = file;
                console.log("*********");
                console.log(file);
                toastr.options.timeOut = 8000;
                toastr.success("Uploaded successfully");
                $localStorage.sliderFilterData = $scope.sliderFilterData;
                $rootScope.tabColor.uploadData = "uploadDataSet";

                $rootScope.tabColor.selectAttribute = "attributeSelectionU";
                $state.go('training.selectAttribute');

            } else {
               
                toastr.options.timeOut = 8000;
                toastr.error(response.data.err_desc);
            }
            console.log("Inside Angular controller")
            console.log(response.data)
            // flag = false;
        }).catch(function (err) {
            $scope.loader = false;
            toastr.options.timeOut = 8000;
            toastr.error(err);
            console.log(err);
        });
    }

    $scope.goNext = function () {

        $scope.uploadFile();
        //$scope.sendData();


    }


    function uploadProgress(evt) {
        $scope.$apply(function () {
            if (evt.lengthComputable) {
                $scope.progress = Math.round(evt.loaded * 100 / evt.total)
            } else {
                $scope.progress = 'unable to compute'
            }
        })
    }

    function uploadComplete(evt) {
        /* This event is raised when the server send back a response */
        alert(evt.target.responseText)
    }

    function uploadFailed(evt) {
        alert("Check console for file details")
        //alert("There was an error attempting to upload the file.")
    }

    function uploadCanceled(evt) {
        $scope.$apply(function () {
            $scope.progressVisible = false
        })
        alert("The upload has been canceled by the user or the browser dropped the connection.")
    }




}])