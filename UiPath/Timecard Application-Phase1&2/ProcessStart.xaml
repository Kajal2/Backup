<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessStart" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ProcessStart_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="fileList" />
      <Variable x:TypeArguments="x:String" Name="excelFileName" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[fileList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(environment.CurrentDirectory.Substring(0,9)+ environment.UserName +"\Documents\UiPath\Timecard Application\ExcelFiles")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[excelFileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="ProcessStart" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtEmpDetails" />
                <Variable x:TypeArguments="x:String" Name="userID">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="userShift">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="userProjectCode">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="userBillableHours">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="userNonBillableHours">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="userRegion">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="outUserID" />
                <Variable x:TypeArguments="x:String" Name="outUserShift" />
                <Variable x:TypeArguments="x:String" Name="outUserRegion" />
                <Variable x:TypeArguments="ui:GenericValue" Name="outUserProjectCode" />
                <Variable x:TypeArguments="x:Object" Name="outUserBT" />
                <Variable x:TypeArguments="x:Object" Name="outUserNBT" />
                <Variable x:TypeArguments="x:String" Default="ankikoth" Name="loginID" />
                <Variable x:TypeArguments="x:String" Name="userSR" />
                <Variable x:TypeArguments="x:Int32" Name="userSRInt" />
                <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
                <Variable x:TypeArguments="x:Int32" Default="0" Name="noOfProjectCodes" />
                <Variable x:TypeArguments="x:Object" Name="outLeaveCode" />
                <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="userLeaveDates" />
                <Variable x:TypeArguments="x:String" Name="userTrainingCode">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="ui:GenericValue" Default="[&quot;&quot;]" Name="outTrainingDates" />
                <Variable x:TypeArguments="x:String" Name="userLeaveCode">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="outLeaveDates" />
                <Variable x:TypeArguments="x:Object" Name="outTrainingCode" />
                <Variable x:TypeArguments="x:Object" Name="outFromDate" />
                <Variable x:TypeArguments="x:Object" Name="outToDate" />
                <Variable x:TypeArguments="x:String" Name="fromDate">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:String" Name="toDate">
                  <Variable.Default>
                    <Literal x:TypeArguments="x:String" Value="" />
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="sd:DataTable" Name="RegionDT" />
                <Variable x:TypeArguments="s:DateTime" Name="holiDate" />
                <Variable x:TypeArguments="scg:List(s:DateTime)" Name="HolidayDates" />
              </Sequence.Variables>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[excelFileName]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_1">
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dtEmpDetails]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="EmpDetails">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <ui:ForEachRow DataTable="[dtEmpDetails]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="2" DisplayName="Get UserID" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:String">[outUserID]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserID.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Shift" DisplayName="Get UserShift" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:String">[outUserShift]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userShift]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserShift.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Region" DisplayName="Get UserRegion" sap2010:WorkflowViewState.IdRef="GetRowItem_3" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:String">[outUserRegion]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userRegion]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserRegion.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Read and Store HolidaysList According To The Region" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="[excelFileName]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                <ui:ExcelReadRange AddHeaders="True" DataTable="[RegionDT]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[userRegion]">
                                  <ui:ExcelReadRange.Range>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:ExcelReadRange.Range>
                                </ui:ExcelReadRange>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:List(s:DateTime)">[HolidayDates]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:List(s:DateTime)">[New List(Of DateTime)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEachRow DataTable="[RegionDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Date" DisplayName="Get row item" sap2010:WorkflowViewState.IdRef="GetRowItem_13" Row="[row]">
                                  <ui:GetRowItem.Value>
                                    <OutArgument x:TypeArguments="s:DateTime">[holiDate]</OutArgument>
                                  </ui:GetRowItem.Value>
                                </ui:GetRowItem>
                                <AddToCollection x:TypeArguments="s:DateTime" Collection="[HolidayDates]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[holiDate]" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Project Codes(separated by ;)" DisplayName="Get UserProjectCodes" sap2010:WorkflowViewState.IdRef="GetRowItem_4" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[outUserProjectCode]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userProjectCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserProjectCode.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[userProjectCode.Contains(&quot;;&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[noOfProjectCodes]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[Split(userProjectCode,";").Length]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[noOfProjectCodes]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="BT(separated by ;)" DisplayName="Get UserBT" sap2010:WorkflowViewState.IdRef="GetRowItem_5" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outUserBT]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userBillableHours]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserBT.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="NBT(separated by ;)" DisplayName="Get UserNBT" sap2010:WorkflowViewState.IdRef="GetRowItem_6" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outUserNBT]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userNonBillableHours]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outUserNBT.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Leave Code" DisplayName="Get Leave Code" sap2010:WorkflowViewState.IdRef="GetRowItem_7" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outLeaveCode]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userLeaveCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outLeaveCode.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Leave Dates" DisplayName="Get Leave Dates" sap2010:WorkflowViewState.IdRef="GetRowItem_8" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:String">[outLeaveDates]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <If Condition="[outLeaveDates.Contains(&quot;,&quot;)]" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:List(x:String)">[userLeaveDates]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:List(x:String)">[outLeaveDates.Split({","}, StringSplitOptions.None).ToList]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <AddToCollection x:TypeArguments="x:String" Collection="[userLeaveDates]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[outLeaveDates]" />
                          </If.Else>
                        </If>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Training Code" DisplayName="Get Training Code" sap2010:WorkflowViewState.IdRef="GetRowItem_9" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outTrainingCode]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[userTrainingCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outTrainingCode.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Training Dates" DisplayName="Get Training Dates" sap2010:WorkflowViewState.IdRef="GetRowItem_10" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[outTrainingDates]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <If Condition="[outLeaveDates.Contains(&quot;,&quot;)]" sap2010:WorkflowViewState.IdRef="If_3">
                                <If.Then>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[userTrainingDates]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[outTrainingDates.Split({","}, StringSplitOptions.None).ToList]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <AddToCollection x:TypeArguments="x:String" Collection="[userTrainingDates]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[outTrainingDates]" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="From Date" DisplayName="Get From Date" sap2010:WorkflowViewState.IdRef="GetRowItem_11" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outFromDate]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[fromDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outFromDate.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="To Date" DisplayName="Get To Date" sap2010:WorkflowViewState.IdRef="GetRowItem_12" Row="[row]">
                          <ui:GetRowItem.Value>
                            <OutArgument x:TypeArguments="x:Object">[outToDate]</OutArgument>
                          </ui:GetRowItem.Value>
                        </ui:GetRowItem>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[toDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[outToDate.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[userBillableHours + &quot; &quot; + userID + &quot; &quot; + userNonBillableHours + &quot; &quot; + userProjectCode + &quot; &quot; + userRegion + &quot; &quot; + userShift+ &quot;  &quot; + userProjectCode + &quot;  &quot; + count.ToString + &quot;   &quot; + userLeaveCode + &quot;   &quot; + userLeaveDates.Count.ToString + &quot;   &quot; + userTrainingCode + &quot;   &quot; + outTrainingDates + &quot;   &quot; + fromDate + &quot;   &quot; + toDate+ &quot; - &quot; +noOfProjectCodes.ToString]" />
                      <ui:ForEach x:TypeArguments="x:Object" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[HolidayDates]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_10">
                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[item.ToString]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Main.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserID">[userID]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserShift">[userShift]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserProjectCode">[userProjectCode]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserBT">[userBillableHours]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserNBT">[userNonBillableHours]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="arguserRegion">[userRegion]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="argCount">[count]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="argNoOfProjectCodes">[noOfProjectCodes]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argUserLeaveCode">[userLeaveCode]</InArgument>
                          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="argUserLeaveDates">[userLeaveDates]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argTrainingCode">[userTrainingCode]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argOutTrainingDates">[outTrainingDates]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argFromDate">[fromDate]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argToDate">[toDate]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="argExcelFileName">[excelFileName]</InArgument>
                          <InArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="argHolidayList">[HolidayDates]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <ui:SendMail MailMessage="{x:Null}" Port="{x:Null}" TimeoutMS="{x:Null}" Bcc="ankit.kothari@capgemini.com" Body="Hi,&#xA;Please find the updated timecard info for all your Direct reports and review it and take the necessary actions.&#xA;&#xA;*** Pl dont reply to mail&#xA;Thanks,&#xA;Robot&#xA;" Cc="vamsi-krishna.gogineni@capgemini.com ; praveen.pallapothu@capgemini.com" DisplayName="Send SMTP Mail Message" Email="503006333" EnableSSL="True" From="ankit.kothari@ge.com" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Name="Timecard Robot" Password="DotNet@1234g" SecureConnection="Auto" Server="mail.ad.ge.com" Subject="Updated_Timesheet_Info" To="nikhil.c.shinde@capgemini.com">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">[excelFileName]</InArgument>
                  </scg:List>
                </ui:SendMail.Files>
              </ui:SendMail>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d0VDOlxVc2Vyc1xwcGFsbGFwb1xEb2N1bWVudHNcVWlQYXRoXFVwZGF0ZWRUaW1lU2hlZXRcUHJvY2Vzc1N0YXJ0LnhhbWzDAUAD9QMOAgEBRQVMDgMBlwJNBfMDEgIBAkoySr4BAwGaAkczRz0DAZgCTXhNhAEDAZUCUwvwAxYCAQNUDVsWAwGQAlwN7wMYAgEEWThZRwMBkwJWOVZIAwGRAmEVYUQCARNmFWZEAgESaxVrRAIBEXAVcEQCARB1FXVEAgEPehV6RAIBDoMBPoMBSAIBDYYBPYYBQAIBDIcBPYcBQAIBC4kBSIkBXwIBCowBFYwBRAIBCY8BRY8BVQIBCJIBFZIBRAIBB5sBFZsBRAIBBqABFaABRAIBBacBD64BGAMBjAKvAQ/AASoDAYMCwQEP5wMfAgEh6AMP7gMdAgEUrAE5rAE6AwGPAqkBOqkBQQMBjQKvAaoBrwG7AQMBigK1ARW9ASADAYQCwQEowQE4AwGBAscBFeQDIAIBIugDqgXoA8kFAgEg6wM86wNLAgEe6ANc6AN5AgEd6AO6AugDgwMCARzoA3/oA7YCAgEb6AOOBegDpgUCARroA9ED6APnAwIBGegDrwPoA7oDAgEY6AP1BOgDhQUCARfoA8cE6APVBAIBFugDrQToA70EAgEVtgEXvAErAwGFAsgBF8IDIgIBTcMDF8MD5wQCAUvEAxfPAyQCAUTQAxfjAy8CASO2AUa2AVYDAYgCuQEduQFMAwGHArYBrQG2AbkBAwGGAskBGdABIgMB/AHRARnVASkDAfYB1gEZ3QEiAwHxAd4BGeIBKQMB6wHjARnqASIDAeYB6wEZ7wEpAwHgAfABGfcBIgMB2wH4ARmJAjQDAdEBigIZkQIiAwHNAZICGaICKQMBvgGjAhmnAikDAbgBqAIZrwIiAwG0AbACGcUCHgMBqQHGAhnKAikDAaMBywIZ0gIiAwGeAdMCGdcCKQMBmAHYAhnfAiIDAZMB4AIZ5AIpAwGNAeUCGewCIgMBiAHtAhnxAikDAYIB8gIZgAMeAgF2gQMZhQMpAgFwhgMZjQMiAgFrjgMZkgMpAgFlkwMZpwMpAgFkqAMZrAMpAgFerQMZtAMiAgFZtQMZuQMpAgFTugMZwQMiAgFOwwNuwwPkBAIBTMQDigHEA5oBAgFJygMdzAMoAgFF1QNU1QNnAgFC1gNV1gNrAgFA2gNb2gNqAgE+3ANa3ANsAgE84ANb4ANqAgE63gNW3gNgAgE41ANd1ANuAgE21wNY1wNkAgE04QNl4QNzAgEy2ANS2ANZAgEw0wNX0wNiAgEu3QNe3QNwAgEt0gNU0gNcAgEr2QNd2QNvAgEp2wNm2wN2AgEn0APDAdADzgECASbfA1TfA1wCASTOAUPOAU4DAf8BywFEywFLAwH9AdMBRdMBUAMB+gHRAawB0QGzAQMB+AHRAVzRAV8DAfcB2wFE2wFYAwH0AdgBRdgBTQMB8gHgAUXgAVMDAe8B3gGzAd4BugEDAe0B3gFc3gFjAwHsAegBROgBWwMB6QHlAUXlAVADAecB7QFF7QFUAwHkAesBtQHrAbwBAwHiAesBXOsBZAMB4QH1AUT1AVwDAd4B8gFF8gFRAwHcAfgB0AH4AeEBAwHZAf4BH4YCKgMB0gGPAlCPAmcDAdABjAJRjAJfAwHOAZICMpICPgMBywGYAh+fAioDAb8BpQJMpQJgAwG8AaMC0gGjAtkBAwG6AaMCXKMCewMBuQGtAkStAmEDAbcBqgJFqgJWAwG1AbACJ7ACUgMBqgGyAh25AiYDAbABvAIdwwImAwGsAcgCRcgCUAMBpwHGAr0BxgLEAQMBpQHGAlzGAnADAaQB0AJE0AJYAwGhAc0CRc0CWAMBnwHVAkXVAlEDAZwB0wK/AdMCxgEDAZoB0wJc0wJxAwGZAd0CRN0CWQMBlgHaAkXaAlsDAZQB4gJF4gJTAwGRAeACuQHgAsABAwGPAeACXOACaAMBjgHqAkTqAlsDAYsB5wJF5wJUAwGJAe8CRe8CVAMBhgHtArsB7QLCAQMBhAHtAlztAmkDAYMB8gIn8gJQAgF39AId+wImAgF+/gId/gLWAQIBeYMDRYMDVgIBdIEDvwGBA8YBAgFygQNcgQNrAgFxiwNEiwNeAgFuiANFiANXAgFskANMkANeAgFpjgPCAY4DyQECAWeOA1yOA2wCAWaqA0WqA1ICAWKoA7gBqAO/AQIBYKgDXKgDZwIBX7IDRLIDWgIBXK8DRa8DTwIBWrcDRbcDUAIBV7UDtAG1A7sBAgFVtQNctQNlAgFUvwNEvwNYAgFRvANFvANNAgFPywMfywOKAQIBRv8BIYUCNQMB0wGZAiGdAjEDAcUBngIhngLVAQMBwAG3Ake3AmoDAbMBtAJItAJaAwGxAcECR8ECSAMBrwG+Aki+AloDAa0B+QJS+QKOAQMBgQH2AlP2AmMCAX/+AlT+AmYCAXz+AsIB/gLTAQIBessDdssDhwECAUf/AVD/AVwDAdcBggInggJWAwHWAf8BswH/AcEBAwHUAZsCT5sCWQMByQGZAroBmQLBAQMBxwGZAmSZAmoDAcYBngJangJqAwHDAZ4CxgGeAtIBAwHBAQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="643,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="605,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="583,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="583,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_1" sap:VirtualizedContainerService.HintSize="509,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_2" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_3" sap:VirtualizedContainerService.HintSize="509,51" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="509,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_13" sap:VirtualizedContainerService.HintSize="314,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="509,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRowItem_4" sap:VirtualizedContainerService.HintSize="509,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRowItem_5" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_6" sap:VirtualizedContainerService.HintSize="509,51" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_7" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_8" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRowItem_9" sap:VirtualizedContainerService.HintSize="509,51" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_10" sap:VirtualizedContainerService.HintSize="509,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="467,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="489,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="509,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRowItem_11" sap:VirtualizedContainerService.HintSize="509,51" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetRowItem_12" sap:VirtualizedContainerService.HintSize="509,51" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="531,3812">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="531,61" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="531,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="531,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="553,4255">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="583,4403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="583,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="605,5184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="627,5408">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="643,5542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="665,5766">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessStart_1" sap:VirtualizedContainerService.HintSize="705,5886">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>